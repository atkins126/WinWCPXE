// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// This file is generated by the Type Library importer or Type Libary Editor. 
// Barring syntax errors, the Editor will parse modifications made to the file. 
// However, when applying changes via the Editor this file will be regenerated  
// and comments or formatting changes will be lost.                             
// ************************************************************************ //
// File generated on 25/07/2013 09:24:11 (- $Rev: 12980 $, 3062736).

[
  uuid(2AE1CB67-2310-4EA0-B43D-916A931F4AE1), 
  version(1.0), 
  helpstring("winwcp Library")
    
]
library winwcp
{

  importlib("stdole2.tlb");

  interface IAUTO;
  coclass AUTO;


  [
    uuid(314667FF-F90F-435C-B738-3D6E58FF2BF6), 
    version(1.0), 
    helpstring("Dispatch interface for AUTO Object"), 
    dual, 
    oleautomation
  ]
  interface IAUTO: IDispatch
  {
    [id(0x000000C9)]
    HRESULT _stdcall NewFile([in] VARIANT FileName);
    [id(0x000000CA)]
    HRESULT _stdcall OpenFile([in] VARIANT FileName);
    [id(0x000000CB)]
    HRESULT _stdcall CloseFile(void);
    [id(0x000000CC)]
    HRESULT _stdcall StartSealTest(void);
    [propget, id(0x000000CD)]
    HRESULT _stdcall Cm([out, retval] VARIANT* Value);
    [propput, id(0x000000CD)]
    HRESULT _stdcall Cm([in] VARIANT Value);
    [propget, id(0x000000CE)]
    HRESULT _stdcall Gm([out, retval] VARIANT* Value);
    [propput, id(0x000000CE)]
    HRESULT _stdcall Gm([in] VARIANT Value);
    [propget, id(0x000000CF)]
    HRESULT _stdcall Ga([out, retval] VARIANT* Value);
    [propput, id(0x000000CF)]
    HRESULT _stdcall Ga([in] VARIANT Value);
    [propget, id(0x000000D0)]
    HRESULT _stdcall Rseal([out, retval] VARIANT* Value);
    [propput, id(0x000000D0)]
    HRESULT _stdcall Rseal([in] VARIANT Value);
    [propget, id(0x000000D1)]
    HRESULT _stdcall SealTestPulseAmplitude([out, retval] VARIANT* Value);
    [propput, id(0x000000D1)]
    HRESULT _stdcall SealTestPulseAmplitude([in] VARIANT Value);
    [propget, id(0x000000D2)]
    HRESULT _stdcall SealTestPulseDuration([out, retval] VARIANT* Value);
    [propput, id(0x000000D2)]
    HRESULT _stdcall SealTestPulseDuration([in] VARIANT Value);
    [id(0x000000D3)]
    HRESULT _stdcall StopSealTest(void);
    [propget, id(0x000000D4)]
    HRESULT _stdcall HoldingVoltage([out, retval] VARIANT* Value);
    [propput, id(0x000000D4)]
    HRESULT _stdcall HoldingVoltage([in] VARIANT Value);
    [id(0x000000D5)]
    HRESULT _stdcall StartRecording(void);
    [id(0x000000D6)]
    HRESULT _stdcall StopRecording(void);
    [propget, id(0x000000D7)]
    HRESULT _stdcall TriggerMode([out, retval] VARIANT* Value);
    [propput, id(0x000000D7)]
    HRESULT _stdcall TriggerMode([in] VARIANT Value);
    [propget, id(0x000000D8)]
    HRESULT _stdcall StimulusProtocol([out, retval] VARIANT* Value);
    [propput, id(0x000000D8)]
    HRESULT _stdcall StimulusProtocol([in] VARIANT Value);
    [propget, id(0x000000D9)]
    HRESULT _stdcall Vm([out, retval] VARIANT* Value);
    [propput, id(0x000000D9)]
    HRESULT _stdcall Vm([in] VARIANT Value);
    [propget, id(0x000000DA)]
    HRESULT _stdcall Im([out, retval] VARIANT* Value);
    [propput, id(0x000000DA)]
    HRESULT _stdcall Im([in] VARIANT Value);
    [propget, id(0x000000DB)]
    HRESULT _stdcall SealTestSmoothingFactor([out, retval] VARIANT* Value);
    [propput, id(0x000000DB)]
    HRESULT _stdcall SealTestSmoothingFactor([in] VARIANT Value);
    [id(0x000000DC)]
    HRESULT _stdcall GetADCSample([in] long RecordNum, [in] long ChannelNum, [in] long SampleNum, [out] VARIANT* Value);
    [propget, id(0x000000DD)]
    HRESULT _stdcall NumRecordsInFile([out, retval] long* Value);
    [propput, id(0x000000DD)]
    HRESULT _stdcall NumRecordsInFile([in] long Value);
    [propget, id(0x000000DE)]
    HRESULT _stdcall NumChannelsPerRecord([out, retval] long* Value);
    [propput, id(0x000000DE)]
    HRESULT _stdcall NumChannelsPerRecord([in] long Value);
    [propget, id(0x000000DF)]
    HRESULT _stdcall NumSamplesPerChannel([out, retval] long* Value);
    [propput, id(0x000000DF)]
    HRESULT _stdcall NumSamplesPerChannel([in] long Value);
    [propget, id(0x000000E0)]
    HRESULT _stdcall Status([out, retval] VARIANT* Value);
    [propput, id(0x000000E0)]
    HRESULT _stdcall Status([in] VARIANT Value);
  };

  [
    uuid(D16707AE-40F8-4310-BA8F-F56E544FE6FA), 
    version(1.0), 
    helpstring("AUTO Object")
  ]
  coclass AUTO
  {
    [default] interface IAUTO;
  };

};